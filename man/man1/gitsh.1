.Dd November 19, 2013
.Dt GITSH 1
.Os
.Sh NAME
.Nm gitsh
.Nd Interactive shell for the git version control system
.
.Sh SYNOPSIS
.Nm gitsh
.Op Fl -version
.Op Fl h
.Op Fl -git Ar CMD
.
.Sh DESCRIPTION
.Nm gitsh
is a language for interacting with a
.Xr git 1
repository. It supports all git subcommands, custom aliases, and custom
commands for interacting with the shell itself. Commands, path names,
branch names, and tag names can all be completed using tab completion.
.Pp
Quit by either typing
.Ic :exit
or sending an EOF character.
.Pp
It supports these options:
.
.Bl -tag
.It Fl -git Ar CMD
use the git command specified in CMD, instead of the default (
.Ic /usr/bin/env git
).
.It Fl h , Fl -help
display a help message and exit.
.It Fl -version
display the version number and exit.
.El
.
.Sh PROMPT
The prompt changes based on the status of the repository. By default it consist
of three parts: the basename of the current working directory, the current HEAD
and the terminator sigil.
.Pp
The current HEAD is a branch name, tag name, abbreviated SHA, or the text
.Li uninitialized
when the present working directory is not a git repository.
.Pp
The terminating sigil has a symbol and color pairing indicating the state of the
repository:
.Bl -column ".Sy Sigil" ".Sy Orange background" ".Sy Description" -offset indent
.It Sy Sigil Ta Sy Color Ta Sy Description
.It !! Ta red background Ta current directory is not a git repo
.It ! Ta red foreground Ta repo has untracked files
.It & Ta orange foreground Ta repo has modified files
.It @ Ta default Ta all other states
.El
.Pp
.Ss Prompt customisation
The prompt can be customised by setting the
.Ic gitsh.prompt
variable using the
.Xr git-config 1
command. The following placeholders can be used in the custom prompt:
.
.Bl -column ".Sy Placeholder" ".Sy Meaning" -offset indent
.It Sy Placeholder  Ta Sy Meaning
.It %#              Ta terminating sigil (see previous table)
.It %b              Ta current HEAD (branch name, tag name, etc.)
.It %d              Ta absolute path to current working directory
.It \&%D            Ta basename of the current working directory
.El
.Pp
For example, setting
.Ic gitsh.prompt
to
.Ic (%b)%d%#
would produce prompts like
.Ic (master)/home/me/repo@
and
.Ic (uninitialized)/home/me!!
.Sh BUILT-IN COMMANDS
.Pp
Built-in commands are used to give instructions to the shell. To distinguish
them from git commands, and to avoid collisions with git aliases and
extensions, they are prefixed with a
.Ic :
character.
.Pp
The following commands are supported:
.Bl -tag -width Ds
.It Ic :set variable value
sets a variable in the gitsh environment to the given value. The value
of the variable can be used in subsequent commands using the variable
name with a dollar prefix.
.Bd -literal -offset indent
@ :set george "George <george@thoughtbot.com>"
@ commit --author $george
.Ed
.Pp
Variable names containing a dot can be used to temporarily override
.Xr git-config 1
variables for the duration of a gitsh session.
.Bd -literal -offset indent
@ :set user.name George
@ :set user.email george@thoughtbot.com
@ commit
.Ed
.Pp
The dollar prefix can also be used to read
.Xr git-config 1
variables, whether or not they were set using the
.Ic :set
command.
.Bd -literal -offset indent
@ commit -m "Commited by $user.name"
.Ed
.It Ic :exit
ends the gitsh session.
.Sh ENVIRONMENT
.Bl -tag -width Ds
.It Ev TERM
The
.Xr terminfo 1
name for the terminal. This is used to determine whether to
show colors.
.El
.
.Sh EXAMPLES
.Bd -literal -offset indent
init
commit --allow-empty
checkout -b new-feature
rebase master
:exit
.Ed
.
.Sh SEE ALSO
.Xr git 1
.Xr gittutorial 7
.
.Sh HISTORY
Based on a prototype by
.An "Mike Burns" Aq mburns@thoughtbot.com
from October 2013, inspired by a talk by
.An "Reda Lemeden" Aq reda@thoughtbot.com .
Further development and enthusiasm provided by
.An "George Brocklehurst" Aq george@thoughtbot.com .
.
.Sh AUTHORS
.An "thoughtbot" Aq hello@thoughtbot.com
